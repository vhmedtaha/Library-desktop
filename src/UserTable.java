
import java.awt.*;
import java.io.File;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Tech Trick
 */
public class UserTable extends javax.swing.JFrame {

    DefaultTableModel model ; 
    int row = -1 ; 
    public UserTable() {
        initComponents();
        model = (DefaultTableModel)users.getModel(); 
        // style jtable
        users.getTableHeader().setFont(new Font("segoe UI",Font.BOLD,12)) ; 
        users.getTableHeader().setOpaque(false) ;
        users.getTableHeader().setBackground(new Color(32,136,203));
        users.getTableHeader().setForeground(new Color(255,255,255));
        users.setRowHeight(25);
        // add database to jtable
        try{
            Tools.connectionToSql() ; 
            String sql ="select * from persons where id!='"+Library.getLoginId()+"'";
            ResultSet rs=Tools.selectQuery(sql);
            while(rs.next()){
                String id = String.valueOf(rs.getInt("id"));
                String username = rs.getString("username");
                String name = rs.getString("name");
                String password = rs.getString("password");
                String mail = rs.getString("email");
                String role = rs.getString("role");
                String favBooks = rs.getString("favBooks");
                String gender = rs.getString("gender");
                String phone = rs.getString("phone");
                String img = rs.getString("img");
                
                String toData[] = {id,username,name,password,mail,role,favBooks,gender,phone,img} ;
                model.addRow(toData);
            }
            Tools.closeConnection();
        }catch(Exception e){
           System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlebar = new javax.swing.JPanel();
        iconminmaxclose = new javax.swing.JPanel();
        Buttonclose = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        Buttonmax = new javax.swing.JPanel();
        fullmax = new javax.swing.JLabel();
        ButtonMin = new javax.swing.JPanel();
        minimize = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        users = new javax.swing.JTable();
        UpdateButton = new javax.swing.JPanel();
        edit = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JPanel();
        delete = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        titlebar.setBackground(new java.awt.Color(83, 103, 255));
        titlebar.setPreferredSize(new java.awt.Dimension(800, 40));
        titlebar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titlebarMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                titlebarMouseReleased(evt);
            }
        });
        titlebar.setLayout(new java.awt.BorderLayout());

        iconminmaxclose.setBackground(new java.awt.Color(83, 103, 255));
        iconminmaxclose.setPreferredSize(new java.awt.Dimension(150, 50));
        iconminmaxclose.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Buttonclose.setBackground(new java.awt.Color(83, 103, 255));
        Buttonclose.setLayout(new java.awt.BorderLayout());

        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete_32px.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });
        Buttonclose.add(close, java.awt.BorderLayout.CENTER);

        iconminmaxclose.add(Buttonclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 50, 40));

        Buttonmax.setBackground(new java.awt.Color(83, 103, 255));
        Buttonmax.setLayout(new java.awt.BorderLayout());

        fullmax.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullmax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/full_screen_32px.png"))); // NOI18N
        fullmax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullmaxMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fullmaxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fullmaxMouseExited(evt);
            }
        });
        Buttonmax.add(fullmax, java.awt.BorderLayout.CENTER);

        iconminmaxclose.add(Buttonmax, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 50, 40));

        ButtonMin.setBackground(new java.awt.Color(83, 103, 255));
        ButtonMin.setLayout(new java.awt.BorderLayout());

        minimize.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        minimize.setForeground(new java.awt.Color(242, 242, 242));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("-");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        ButtonMin.add(minimize, java.awt.BorderLayout.CENTER);

        iconminmaxclose.add(ButtonMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        titlebar.add(iconminmaxclose, java.awt.BorderLayout.LINE_END);

        getContentPane().add(titlebar, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBackground(new java.awt.Color(38, 42, 66));

        users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "User name", "Name", "Password", "Email", "Role", "FavBooks", "Gender", "Phone", "img"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        users.setFocusable(false);
        users.setRowHeight(25);
        users.setSelectionBackground(new java.awt.Color(0, 153, 255));
        users.getTableHeader().setReorderingAllowed(false);
        users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(users);

        UpdateButton.setBackground(new java.awt.Color(0, 141, 190));
        UpdateButton.setForeground(new java.awt.Color(0, 133, 206));
        UpdateButton.setLayout(new java.awt.BorderLayout());

        edit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(242, 242, 242));
        edit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        edit.setText("Update");
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editMouseExited(evt);
            }
        });
        UpdateButton.add(edit, java.awt.BorderLayout.CENTER);

        DeleteButton.setBackground(new java.awt.Color(0, 141, 190));
        DeleteButton.setForeground(new java.awt.Color(0, 133, 206));
        DeleteButton.setLayout(new java.awt.BorderLayout());

        delete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(242, 242, 242));
        delete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delete.setText("Delete");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        DeleteButton.add(delete, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(0, 141, 190));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setBackground(new java.awt.Color(255, 153, 153));
        jLabel2.setFont(new java.awt.Font("JetBrains Mono", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(" Users Table");
        jPanel2.add(jLabel2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(378, 378, 378)
                        .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(76, 76, 76))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1122, 636));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void changecolor(JPanel hover, Color rand){
        hover.setBackground(rand);
    }

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        this.dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        changecolor(Buttonclose, new Color(25, 29, 74));
    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
        changecolor(Buttonclose, new Color(83, 103, 255));
    }//GEN-LAST:event_closeMouseExited

    private void fullmaxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullmaxMouseClicked
        if(this.getExtendedState()!= Mainmenu.MAXIMIZED_BOTH){
            this.setExtendedState(Mainmenu.MAXIMIZED_BOTH);
        }
        else{
            this.setExtendedState(Mainmenu.NORMAL);
        }
    }//GEN-LAST:event_fullmaxMouseClicked

    private void fullmaxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullmaxMouseEntered
        changecolor(Buttonmax, new Color(25, 29, 74));
    }//GEN-LAST:event_fullmaxMouseEntered

    private void fullmaxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullmaxMouseExited
        changecolor(Buttonmax, new Color(83, 103, 255));
    }//GEN-LAST:event_fullmaxMouseExited

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setExtendedState(Mainmenu.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        changecolor(ButtonMin, new Color(25, 29, 74));
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        changecolor(ButtonMin, new Color(83, 103, 255));
    }//GEN-LAST:event_minimizeMouseExited

    private void titlebarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titlebarMouseEntered
        titlebar.setVisible(true);
    }//GEN-LAST:event_titlebarMouseEntered

    private void titlebarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titlebarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_titlebarMouseReleased
    public boolean isGood(String...  s) {
        boolean x = true;
        for (String str : s)    x &= !str.isEmpty();
        return x;
    }
    
    private void editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
        row = users.getSelectedRow();
        if(row>-1){
            int id = Integer.valueOf(model.getValueAt(row, 0).toString());
            String username = model.getValueAt(row, 1).toString().toLowerCase(); 
            String name = model.getValueAt(row, 2).toString();
            String password = model.getValueAt(row, 3).toString();
            String mail = model.getValueAt(row, 4).toString().toLowerCase();
            String role = model.getValueAt(row, 5).toString();
            String favBooks = "";
            if(model.getValueAt(row, 6) != null){
                favBooks = model.getValueAt(row, 6).toString();
            }
                    
            String gender = model.getValueAt(row, 7).toString();
            String phone = model.getValueAt(row, 8).toString();
            String img = model.getValueAt(row, 9).toString();
            
            String regex = "^[\\w!#$%&amp;'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&amp;'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(mail);
            
            if(!isGood(username, name, password, mail, role, gender, phone, img)) {
                JOptionPane.showMessageDialog(null, "Fields must not be empty except favBooks", "Error",JOptionPane.ERROR_MESSAGE);
                return;            
            }
            if(!matcher.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid Email", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            regex = "^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,18}[a-zA-Z0-9]$";
            pattern = Pattern.compile(regex);
            matcher = pattern.matcher(username);
            
            if(!matcher.matches()) {
                JOptionPane.showMessageDialog(null, "Invalid User", "Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            String sqlUsername = "SELECT * FROM persons WHERE username='"+ username+"' AND id!='"+ id+"';";
            String sqlEmail = "SELECT * FROM persons WHERE email='"+ mail+"' AND id!='"+ id+"';";
            String favexists = !favBooks.isEmpty()? ",favBooks='"+favBooks+"'": "";
            ResultSet userRs = Tools.selectQuery(sqlUsername);
            ResultSet emailRs = Tools.selectQuery(sqlEmail);
            try {
                boolean uniUser = userRs.next();
                boolean uniEmail = emailRs.next();
                if(uniUser && uniEmail) {
                    
                    JOptionPane.showMessageDialog(null, "User and Email already Exists", "Error",JOptionPane.ERROR_MESSAGE);

                    return;
                }

                else if(uniUser) {
                    JOptionPane.showMessageDialog(null, "User already Exists", "Error",JOptionPane.ERROR_MESSAGE);
                    return;
                } 

                else if(uniEmail) {
                    JOptionPane.showMessageDialog(null, "Email already Exists", "Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                else {
                    String st = "UPDATE persons SET username='"+username+"', name='"+name+"', password='"+password+"', email='"+mail+"', role='"+role+"' "+favexists+", gender='"+gender+"', phone='"+phone+"', img='"+img+"' WHERE id='"+id+"'";
                    Tools.excecuateStatement(st);
                    JOptionPane.showMessageDialog(null, "Update is Done");
                    this.dispose();
                    UserTable main = new UserTable();
                    main.setVisible(true);
                    Tools.closeConnection();
                }
            } catch(Exception ex) {
                
            }
            row = -1;
        }
    }//GEN-LAST:event_editMouseClicked
    
    private void editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
        changecolor(UpdateButton, new Color(204, 204, 204));
    }//GEN-LAST:event_editMouseEntered

    private void editMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseExited
        changecolor(UpdateButton, new Color(0, 133, 206));
    }//GEN-LAST:event_editMouseExited

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        row = users.getSelectedRow();
        if(row>-1){
            int id = Integer.valueOf(model.getValueAt(row, 0).toString());
            String st = "DELETE FROM persons WHERE id='"+id+"'";
            String filename = model.getValueAt(row, 9).toString();
            File file = new File(filename);

            if (!filename.equals("upload/profileImgs/default.png") && file.delete()) {
                System.out.println("File deleted successfully");
            }
            
            else {
                System.out.println("Failed to delete the file");
            }
            row = -1;
            JOptionPane.showMessageDialog(null, "Delete is Done");
            Tools.excecuateStatement(st);
            this.dispose();
            Tools.closeConnection();
            UserTable main = new UserTable();
            main.setVisible(true);
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        changecolor(DeleteButton, new Color(204, 204, 204));
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        changecolor(DeleteButton, new Color(0, 133, 206));
    }//GEN-LAST:event_deleteMouseExited

    private void usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersMouseClicked
    }//GEN-LAST:event_usersMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonMin;
    private javax.swing.JPanel Buttonclose;
    private javax.swing.JPanel Buttonmax;
    private javax.swing.JPanel DeleteButton;
    private javax.swing.JPanel UpdateButton;
    private javax.swing.JLabel close;
    private javax.swing.JLabel delete;
    private javax.swing.JLabel edit;
    private javax.swing.JLabel fullmax;
    private javax.swing.JPanel iconminmaxclose;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel titlebar;
    private javax.swing.JTable users;
    // End of variables declaration//GEN-END:variables
}
