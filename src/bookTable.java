
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class bookTable extends javax.swing.JFrame {

DefaultTableModel model ;   
int row=-1  ; 
public bookTable() {
        initComponents();   
        model = (DefaultTableModel)books.getModel() ; 
        // style jtable
        books.getTableHeader().setFont(new Font("segoe UI",Font.BOLD,12)) ; 
        books.getTableHeader().setOpaque(false) ;
        books.getTableHeader().setBackground(new Color(32,136,203));
        books.getTableHeader().setForeground(new Color(255,255,255));
        books.setRowHeight(25);
        // add database to jtable
        try{
            Tools.connectionToSql() ; 
            String sql ="select * from books";
            ResultSet rs=Tools.selectQuery(sql);
            while(rs.next()){
                String id = String.valueOf(rs.getInt("id"));
                String name = rs.getString("name");
                String img = rs.getString("img");
                String genere = rs.getString("genere");
                String lan = rs.getString("language");
                String author = rs.getString("author");
                String rate = rs.getString("rate");
                String price = rs.getString("price");
                String pages = rs.getString("pages");
                String toData[] = {id,name,img,genere,lan,author,rate,price,pages} ;
                model.addRow(toData);
            }
            Tools.closeConnection();
        }catch(Exception e){
           System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        books = new javax.swing.JTable();
        DeleteBtn = new javax.swing.JPanel();
        delete = new javax.swing.JLabel();
        UpdateButton = new javax.swing.JPanel();
        edit = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        UploadButton = new javax.swing.JPanel();
        upload = new javax.swing.JLabel();
        titlebar = new javax.swing.JPanel();
        iconminmaxclose1 = new javax.swing.JPanel();
        Buttonclose = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        ButtonMin = new javax.swing.JPanel();
        minimize = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(38, 42, 66));

        books.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "img", "genere", "language", "author", "rate", "price", "pages"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        books.setFocusable(false);
        books.setRowHeight(25);
        books.setSelectionBackground(new java.awt.Color(0, 153, 255));
        books.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(books);

        DeleteBtn.setBackground(new java.awt.Color(0, 141, 190));
        DeleteBtn.setForeground(new java.awt.Color(0, 133, 206));
        DeleteBtn.setLayout(new java.awt.BorderLayout());

        delete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(242, 242, 242));
        delete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        delete.setText("Delete");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        DeleteBtn.add(delete, java.awt.BorderLayout.CENTER);

        UpdateButton.setBackground(new java.awt.Color(0, 141, 190));
        UpdateButton.setForeground(new java.awt.Color(0, 133, 206));
        UpdateButton.setLayout(new java.awt.BorderLayout());

        edit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(242, 242, 242));
        edit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        edit.setText("Update");
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editMouseExited(evt);
            }
        });
        UpdateButton.add(edit, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(0, 141, 190));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(255, 153, 153));
        jLabel1.setFont(new java.awt.Font("JetBrains Mono", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Books Table");
        jPanel2.add(jLabel1, java.awt.BorderLayout.CENTER);

        UploadButton.setBackground(new java.awt.Color(0, 141, 190));
        UploadButton.setForeground(new java.awt.Color(0, 133, 206));
        UploadButton.setLayout(new java.awt.BorderLayout());

        upload.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        upload.setForeground(new java.awt.Color(242, 242, 242));
        upload.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        upload.setText("Upload Book");
        upload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadMouseExited(evt);
            }
        });
        UploadButton.add(upload, java.awt.BorderLayout.CENTER);

        titlebar.setBackground(new java.awt.Color(83, 103, 255));
        titlebar.setPreferredSize(new java.awt.Dimension(800, 40));
        titlebar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                titlebarMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                titlebarMouseReleased(evt);
            }
        });
        titlebar.setLayout(new java.awt.BorderLayout());

        iconminmaxclose1.setBackground(new java.awt.Color(83, 103, 255));
        iconminmaxclose1.setPreferredSize(new java.awt.Dimension(150, 50));
        iconminmaxclose1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Buttonclose.setBackground(new java.awt.Color(83, 103, 255));
        Buttonclose.setLayout(new java.awt.BorderLayout());

        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete_32px.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });
        Buttonclose.add(close, java.awt.BorderLayout.CENTER);

        iconminmaxclose1.add(Buttonclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 50, 40));

        ButtonMin.setBackground(new java.awt.Color(83, 103, 255));
        ButtonMin.setLayout(new java.awt.BorderLayout());

        minimize.setFont(new java.awt.Font("Segoe UI", 2, 36)); // NOI18N
        minimize.setForeground(new java.awt.Color(242, 242, 242));
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("-");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeMouseExited(evt);
            }
        });
        ButtonMin.add(minimize, java.awt.BorderLayout.CENTER);

        iconminmaxclose1.add(ButtonMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 50, 40));

        titlebar.add(iconminmaxclose1, java.awt.BorderLayout.LINE_END);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(360, 360, 360)
                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(530, 530, 530)
                .addComponent(UploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(titlebar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(UploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(titlebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1200, 738));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void changecolor(JPanel hover, Color rand){
        hover.setBackground(rand);
    }
    private void editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
        row = books.getSelectedRow();
        if(row > -1) {
            int id = Integer.valueOf(model.getValueAt(row, 0).toString());
            String name = model.getValueAt(row, 1).toString() ; 
            String img = model.getValueAt(row, 2).toString();
            String genere = model.getValueAt(row, 3).toString();
            String lan = model.getValueAt(row, 4).toString();
            String author = model.getValueAt(row, 5).toString();
            String rate = model.getValueAt(row, 6).toString();
            String price = model.getValueAt(row, 7).toString();
            String pages = model.getValueAt(row, 8).toString();
            if(!isGood(name, img, genere, lan, author, rate, price, pages)) {
                JOptionPane.showMessageDialog(null, "Fields must not be empty", "Error",JOptionPane.ERROR_MESSAGE);
                return;            
            }
            String st = "UPDATE books SET name='"+name+"', img='"+img+"', genere='"+genere+"', language='"+lan+"', author='"+author+"', rate='"+rate+"', pages='"+pages+"', price='"+price+"' WHERE id='"+id+"';";
            Tools.excecuateStatement(st);
            JOptionPane.showMessageDialog(null, "Update is Done");
            Library.getMenuu().dispose();
            this.dispose();
            Mainmenu menu = new Mainmenu();
            menu.setVisible(true);
            this.dispose();
            bookTable main = new bookTable();
            main.setVisible(true);
            Tools.closeConnection();
            row = -1;
        }
    }//GEN-LAST:event_editMouseClicked

    private void editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
        changecolor(UpdateButton, new Color(204, 204, 204));
    }//GEN-LAST:event_editMouseEntered

    private void editMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseExited
        changecolor(UpdateButton, new Color(0, 133, 206));
    }//GEN-LAST:event_editMouseExited

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        changecolor(DeleteBtn, new Color(0, 133, 206));
    }//GEN-LAST:event_deleteMouseExited

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        changecolor(DeleteBtn, new Color(204, 204, 204));
    }//GEN-LAST:event_deleteMouseEntered
    public boolean isGood(String...  s) {
        boolean x = true;
        for (String str : s)    x &= !str.isEmpty();
        return x;
    }
    
    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        row = books.getSelectedRow();
        if(row>-1){
            int id = Integer.valueOf(model.getValueAt(row, 0).toString());
            
            String filename = model.getValueAt(row, 2).toString();
            File file = new File(filename);
            if (file.delete()) {
                System.out.println("File deleted successfully");
            }
            
            else {
                System.out.println("Failed to delete the file");
            }
            
            String st = "DELETE FROM books WHERE id='"+id+"'";
            Tools.connectionToSql();
            Tools.excecuateStatement(st);
            try{
                ResultSet sql = Tools.selectQuery("SELECT * FROM persons WHERE id>=1");
                System.out.println("bookTable.deleteMouseClicked()");
                
                while(sql.next()) {
                    int userId = sql.getInt(1);

                    Vector<Integer>userBooks = new Vector<Integer>();
                    if(sql.getString(7).isEmpty()) continue;
                    
                    String[] sa = sql.getString(7).split(",");
                    System.out.println(userId + " " + sa.toString());
                    for(String i : sa)  
                        userBooks.add(parseInt(i));
                    try {
                        userBooks.remove(userBooks.indexOf(id));
                    } catch(Exception ex) {}

                    String stBooks = ""; 
                    for(int i: userBooks) {
                        stBooks += i;
                        stBooks += ',';
                    }
                    st = "UPDATE persons SET favBooks='"+stBooks+"' WHERE id='"+userId+"';";
                    Tools.excecuateStatement(st);
                }
            } catch(Exception ex) {
                
            } 
            JOptionPane.showMessageDialog(null, "Update is Done");
            this.dispose();
            //
            try {
                Library.getMenuu().dispose();
            } catch(Exception ex){} 
            Mainmenu menu = new Mainmenu();
            menu.setVisible(true);
            //
            bookTable main = new bookTable();
            main.setVisible(true);
            Tools.closeConnection();
            row = -1;
        }
        else{
            JOptionPane.showMessageDialog(null, "Must select row");
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void uploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseClicked
        this.dispose();
        Upload main = new Upload();
        main.setVisible(true);
        
    }//GEN-LAST:event_uploadMouseClicked

    private void uploadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseEntered
        changecolor(UploadButton, new Color(204, 204, 204));
    }//GEN-LAST:event_uploadMouseEntered

    private void uploadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseExited
        changecolor(UploadButton, new Color(0, 133, 206));
    }//GEN-LAST:event_uploadMouseExited

    private void titlebarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titlebarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_titlebarMouseReleased

    private void titlebarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titlebarMouseEntered
        titlebar.setVisible(true);
    }//GEN-LAST:event_titlebarMouseEntered

    private void minimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseExited
        changecolor(ButtonMin, new Color(83, 103, 255));
    }//GEN-LAST:event_minimizeMouseExited

    private void minimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseEntered
        changecolor(ButtonMin, new Color(25, 29, 74));
    }//GEN-LAST:event_minimizeMouseEntered

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setExtendedState(Mainmenu.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
        changecolor(Buttonclose, new Color(83, 103, 255));
    }//GEN-LAST:event_closeMouseExited

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        changecolor(Buttonclose, new Color(25, 29, 74));
    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        this.dispose();
    }//GEN-LAST:event_closeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bookTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonMin;
    private javax.swing.JPanel Buttonclose;
    private javax.swing.JPanel DeleteBtn;
    private javax.swing.JPanel UpdateButton;
    private javax.swing.JPanel UploadButton;
    private javax.swing.JTable books;
    private javax.swing.JLabel close;
    private javax.swing.JLabel delete;
    private javax.swing.JLabel edit;
    private javax.swing.JPanel iconminmaxclose1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel titlebar;
    private javax.swing.JLabel upload;
    // End of variables declaration//GEN-END:variables
}
